{"/home/usuario/Mod-7/src/ImperialLength.ts":{"path":"/home/usuario/Mod-7/src/ImperialLength.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":30}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":34}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":31}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":31}},"6":{"start":{"line":41,"column":8},"end":{"line":41,"column":26}},"7":{"start":{"line":48,"column":8},"end":{"line":48,"column":35}},"8":{"start":{"line":55,"column":8},"end":{"line":55,"column":32}},"9":{"start":{"line":62,"column":8},"end":{"line":62,"column":32}},"10":{"start":{"line":69,"column":8},"end":{"line":69,"column":27}},"11":{"start":{"line":72,"column":0},"end":{"line":72,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":27},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":23},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":22},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":21},"end":{"line":35,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":23},"end":{"line":42,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":21},"end":{"line":49,"column":5}},"line":47},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":20},"end":{"line":56,"column":5}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":19},"end":{"line":63,"column":5}},"line":61},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":21},"end":{"line":70,"column":5}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":16},"end":{"line":12,"column":25}},"type":"default-arg","locations":[{"start":{"line":12,"column":24},"end":{"line":12,"column":25}}],"line":12}},"s":{"0":1,"1":1,"2":5,"3":0,"4":0,"5":0,"6":5,"7":1,"8":1,"9":1,"10":5,"11":1},"f":{"0":5,"1":0,"2":0,"3":0,"4":5,"5":1,"6":1,"7":1,"8":5},"b":{"0":[3]},"inputSourceMap":{"version":3,"file":"/home/usuario/Mod-7/src/ImperialLength.ts","sources":["/home/usuario/Mod-7/src/ImperialLength.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,cAAc;IAGvB;;;OAGG;IACH,YAAY,QAAgB,CAAC;QACzB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAC1B,CAAC;IACD;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,eAAe;QACX,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,cAAc;QACV,OAAO,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,QAAQ,CAAC,KAAa;QAClB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,OAAO,CAAC,KAAa;QACjB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;CAEJ;AA1ED,wCA0EC","sourcesContent":["/**\n * Clase para representar longitudes del sistema imperial\n */\nexport class ImperialLength {\n    input: number;\n    \n    /**\n     * Contructor que inicializa el valor. Llama a setInches para funcionar\n     * @param input Número a almacenar para las conversiones.\n     */\n    constructor(input: number = 0) {\n        this.setInches(input);\n    }\n    /**\n     * Retorna el valor almacenado en millas\n     * @returns {number} Valor en millas\n     */\n    getInputInMilles(): number {\n        return this.input / 63360;\n    }\n\n    /**\n     * Retorna el valor almacenado en yardas\n     * @returns {number} Valor en yardas\n     */\n    getInputInYards(): number {\n        return this.input / 36;\n    }\n\n    /**\n     * Retorna el valor almacenado en pies\n     * @returns {number} Valor en pies\n     */\n    getInputInFeet(): number {\n        return this.input / 12;\n    }\n\n    /**\n     * Retorna el valor almacenado en pulgadas\n     * @returns {number} Valor en pulgadas\n     */\n    getInputInInches(): number {\n        return this.input;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en millas\n     * @param input \n     */\n    setMilles(input: number) {\n        this.input = input * 63360;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en yardas\n     * @param input \n     */\n    setYards(input: number) {\n        this.input = input * 36;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en pies\n     * @param input \n     */\n    setFeet(input: number) {\n        this.input = input * 12;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en pulgadas\n     * @param input \n     */\n    setInches(input: number) {\n        this.input = input;\n    }\n\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a6a6466598ee35888518b531d115fd593797eb23","contentHash":"c83f96342c3164a951908f0fecc61b0ced683dfde49c0568f84871a614d7cbb7"},"/home/usuario/Mod-7/src/LengthAdapter.ts":{"path":"/home/usuario/Mod-7/src/LengthAdapter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":31}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":43}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":33}},"5":{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":34}},"7":{"start":{"line":36,"column":8},"end":{"line":36,"column":33}},"8":{"start":{"line":39,"column":0},"end":{"line":39,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":26},"end":{"line":16,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":27},"end":{"line":23,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":23},"end":{"line":30,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":28},"end":{"line":37,"column":5}},"line":35}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":2,"6":1,"7":2,"8":1},"f":{"0":5,"1":2,"2":1,"3":2},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/Mod-7/src/LengthAdapter.ts","sources":["/home/usuario/Mod-7/src/LengthAdapter.ts"],"names":[],"mappings":";;;AAEA,iDAA4C;AAC5C;;GAEG;AACH,MAAa,aAAc,SAAQ,2BAAY;IAE3C;;;OAGG;IACH,YAA6B,QAAwB;QACjD,KAAK,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;QADV,aAAQ,GAAR,QAAQ,CAAgB;IAErD,CAAC;IAED;;;OAGG;IACH,oBAAoB;QAChB,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC9B,CAAC;IAED;;;OAGG;IACH,qBAAqB;QACjB,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC7B,CAAC;CACJ;AAjCD,sCAiCC","sourcesContent":["export type MetricLengthUnits = \"CENTIMETERS\" | \"METERS\" | \"KILOMETERS\";\nimport {ImperialLength} from \"./ImperialLength\";\nimport {MetricLength} from \"./MetricLength\";\n/**\n * Clase para adaptar unidades imperiales a métricas\n */\nexport class LengthAdapter extends MetricLength{\n    \n    /**\n     * Contructor que inicializa el valor. Lo almacena en pulgadas\n     * @param imperial Objeto del tipo Imperial sobre el que se trabajara\n     */\n    constructor(private readonly imperial: ImperialLength) {\n        super(imperial.getInputInInches());\n    }\n\n    /**\n     * Retorna el valor almacenado en kilometros\n     * @returns {number} Valor en kilometros\n     */\n    getInputInKilometers(): number {\n        return this.input / 39370;\n    }\n\n    /**\n     * Retorna el valor almacenado en metros\n     * @returns {number} Valor en metros\n     */\n    getInputInMeters(): number {\n        return this.input / 39.37;\n    }\n\n    /**\n     * Retorna el valor almacenado en centimetros\n     * @returns {number} Valor en centimetros\n     */\n    getInputInCentimeters(): number {\n        return this.input * 2.54;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"eb65fe28c760d77869d877e8b50e2e4bd4fe5690","contentHash":"da11f7a79e97c924fdd97609e53e9b4fe55edf47fb84e5ad4601b5b049602296"},"/home/usuario/Mod-7/src/MetricLength.ts":{"path":"/home/usuario/Mod-7/src/MetricLength.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":13,"column":8},"end":{"line":13,"column":35}},"3":{"start":{"line":20,"column":8},"end":{"line":20,"column":35}},"4":{"start":{"line":27,"column":8},"end":{"line":27,"column":32}},"5":{"start":{"line":34,"column":8},"end":{"line":34,"column":26}},"6":{"start":{"line":41,"column":8},"end":{"line":41,"column":27}},"7":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"8":{"start":{"line":55,"column":8},"end":{"line":55,"column":36}},"9":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":23},"end":{"line":14,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":27},"end":{"line":21,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":23},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":33,"column":4},"end":{"line":33,"column":5}},"loc":{"start":{"line":33,"column":28},"end":{"line":35,"column":5}},"line":33},"4":{"name":"(anonymous_4)","decl":{"start":{"line":40,"column":4},"end":{"line":40,"column":5}},"loc":{"start":{"line":40,"column":26},"end":{"line":42,"column":5}},"line":40},"5":{"name":"(anonymous_5)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":21},"end":{"line":49,"column":5}},"line":47},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":25},"end":{"line":56,"column":5}},"line":54}},"branchMap":{},"s":{"0":1,"1":1,"2":5,"3":0,"4":0,"5":0,"6":5,"7":0,"8":0,"9":1},"f":{"0":5,"1":0,"2":0,"3":0,"4":5,"5":0,"6":0},"b":{},"inputSourceMap":{"version":3,"file":"/home/usuario/Mod-7/src/MetricLength.ts","sources":["/home/usuario/Mod-7/src/MetricLength.ts"],"names":[],"mappings":";;;AAAA;;GAEG;AACH,MAAa,YAAY;IAGrB;;;OAGG;IACH,YAAY,KAAa;QACrB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,oBAAoB;QAChB,OAAO,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED;;;OAGG;IACH,gBAAgB;QACZ,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;IAC5B,CAAC;IAED;;;OAGG;IACH,qBAAqB;QACjB,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;IAED;;;OAGG;IACH,cAAc,CAAC,KAAa;QACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED;;;OAGG;IACH,SAAS,CAAC,KAAa;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,GAAG,CAAC;IAC7B,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,KAAa;QACvB,IAAI,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC;IAChC,CAAC;CACJ;AA1DD,oCA0DC","sourcesContent":["/**\n * Clase para representar longitudes del sistema imperial\n */\nexport class MetricLength {\n    input: number; //Por defecto, se almacena en centimetros\n    \n    /**\n     * Contructor que inicializa el valor. Llama a setInput para funcionar\n     * @param input Número a almacenar para las conversiones.\n     */\n    constructor(input: number) {\n        this.setCentimeters(input);\n    }\n\n    /**\n     * Retorna el valor almacenado en kilometros\n     * @returns {number} Valor en kilometros\n     */\n    getInputInKilometers(): number {\n        return this.input / 100000;\n    }\n\n    /**\n     * Retorna el valor almacenado en metros\n     * @returns {number} Valor en metros\n     */\n    getInputInMeters(): number {\n        return this.input / 100;\n    }\n\n    /**\n     * Retorna el valor almacenado en centimetros\n     * @returns {number} Valor en centimetros\n     */\n    getInputInCentimeters(): number {\n        return this.input;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en centimetros\n     * @param input \n     */\n    setCentimeters(input: number) {\n        this.input = input;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en metros\n     * @param input \n     */\n    setMeters(input: number) {\n        this.input = input * 100;\n    }\n\n    /**\n     * Cambia el valor del input a uno recibido en kilometros\n     * @param input \n     */\n    setKilometers(input: number) {\n        this.input = input * 100000;\n    }\n}"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"25b34e73433e83c6e0047c5193f26bebc162034c","contentHash":"0d1d640c59544d32bed47df5934f15bea5535a8e67cdacb5f1e6307cb936e8c7"}}